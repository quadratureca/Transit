// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace TransitWorker.Models;

public partial class TransitContext : DbContext
{
    private string dbConnectionString;
    public void DbConnectionString(string connectionString) 
    {
        dbConnectionString = connectionString;
    }

    public TransitContext()
    {
    }

    public TransitContext(DbContextOptions<TransitContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Entity> Entity { get; set; }

    public virtual DbSet<Route> Route { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        => optionsBuilder.UseSqlServer(dbConnectionString);

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Entity>(entity =>
        {
            entity.Property(e => e.Id).HasDefaultValueSql("(newid())");
            entity.Property(e => e.AgencyId)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.RouteId)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.TripId)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.VehicleId)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.VehicleLabel)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Route>(entity =>
        {
            entity.Property(e => e.Id)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("id");
            entity.Property(e => e.AgencyId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("agency_id");
            entity.Property(e => e.ContinuousDropOff).HasColumnName("continuous_drop_off");
            entity.Property(e => e.ContinuousPickup).HasColumnName("continuous_pickup");
            entity.Property(e => e.RouteColor)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("route_color");
            entity.Property(e => e.RouteDesc)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("route_desc");
            entity.Property(e => e.RouteId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("route_id");
            entity.Property(e => e.RouteLongName)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("route_long_name");
            entity.Property(e => e.RouteShortName)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("route_short_name");
            entity.Property(e => e.RouteSortOrder).HasColumnName("route_sort_order");
            entity.Property(e => e.RouteTextColor)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("route_text_color");
            entity.Property(e => e.RouteType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("route_type");
            entity.Property(e => e.RouteUrl)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("route_url");
        });

        OnModelCreatingGeneratedProcedures(modelBuilder);
        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}